{"ts":1351087501609,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"var circles = [];\n\nfunction sketch(ps) {\n  var debug = true;\n  ps.size(800, 400);\n  ps.draw = function() {\n    function hsl2rgb (h, s, l) {\n      /*from http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript*/\n      h = h/360;\n      s = s/100;\n      l = l/100;\n      var r, g, b;\n\n      if(s == 0){\n          r = g = b = l; // achromatic\n      }else{\n          function hue2rgb(p, q, t){\n              if(t < 0) t += 1;\n              if(t > 1) t -= 1;\n              if(t < 1/6) return p + (q - p) * 6 * t;\n              if(t < 1/2) return q;\n              if(t < 2/3) return p + (q - p) * (2/3 - t) * 6;\n              return p;\n          }\n\n          var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n          var p = 2 * l - q;\n          r = hue2rgb(p, q, h + 1/3);\n          g = hue2rgb(p, q, h);\n          b = hue2rgb(p, q, h - 1/3);\n      }\n\n      return [r * 255, g * 255, b * 255];\n    }\n    \n    function splatter(x, y, rad, level, r, g, b) {\n       circles.push({\n        x : x,\n        y : y,\n        rad : rad,\n        r : r,\n        g : g,\n        b : b,\n        a : 170,\n        l : level\n      });\n      ps.noStroke();\n      ps.fill(r, g, b, 170);\n      ps.ellipse(x, y, rad * 2, rad * 2);\n      if (level > 1 ) {\n        level --;\n        var num = Math.round(ps.random(2, 5));\n        for (var i = 0; i < num; i ++) {\n          var a = ps.random(0, ps.TWO_PI);\n          var nx = x + ps.cos(a) * 6.0 * level;\n          var ny = y + ps.sin(a) * 6.0 * level;\n          splatter(nx, ny, rad/2, level, r, g, b);\n        }\n      }\n    }\n    \n    function drawOldCircles() {\n      for(var i in circles) {\n        ps.fill(circles[i].r,circles[i].g,circles[i].b,circles[i].a);\n        ps.ellipse(circles[i].x,circles[i].y,\n                   2*circles[i].rad,2*circles[i].rad);\n      }\n    }\n    \n    function drawSpiral(data, r, g, b, i) {\n      usethissomewhere = (i/30);\n      i = i%30;\n      \n      if (data.spiralprocessed !== undefined) return;\n      \n      var x = (10*i*Math.cos(i) + (ps.width/2));\n      var y = (10*i*Math.sin(i) + (ps.height/2));\n      splatter(x, y, 15, parseInt(data.amplitude,10), r, g, b);\n      data.spiralprocessed = true;\n    } \n    \n    function chooseLinearPos(data, pixps) {\n    }\n    \n    function drawLinear(data, r, g, b) {\n      ps.noStroke();\n      var pixps = 5;\n      var xy = chooseLinearPos(data, pixps);\n      ps.rect(xy[0], xy[1], pixps, \n      (100 + (parseInt(data.amplitude,10) * 10)), 5)\n    }\n    \n    function drawLinearSplatters(data, r, g, b){\n      ps.noStroke();\n      var pixps = 15;\n      var xy = chooseLinearPos(data, pixps);\n      splatter(xy[0], xy[1], 15, parseInt(data.amplitude,10), r, g, b);\n    }\n    \n    function drawLinearCircles(data, r, g, b) {\n      ps.noStroke();\n      var pixps = 15;\n      var xy = chooseLinearPos(data, pixps);\n      var rad = (parseInt(data.amplitude,10) * 4))\n      ps.fill(r, g, b, 170);\n      ps.ellipse(xy[0], xy[0], rad * 2, rad * 2);\n    }\n    \n    function drawClock(data, r, g, b) {\n    }\n    \n    function drawTimeLine(data, r, g, b) {\n    }\n    \n    ps.background(255);\n    \n    switch(type) {\n        case 'spiral':\n        case 'lsplatters':\n        drawOldCircles(); break;\n        case 'clock':\n        case 'lcircles':\n        case 'linear':\n        case 'timeline': break;\n      }\n      \n    for (var i in buffer) {\n      var data = buffer[i];\n      var rgb = hsl2rgb(parseInt(data.h, 10),\n                        parseInt(data.s, 10),\n                        parseInt(data.l, 10));\n      var r = rgb[0];\n      var g = rgb[1];\n      var b = rgb[2];\n      switch(type) {\n        case 'spiral': drawSpiral(data, r, g, b, i); break;\n        case 'linear': drawLinear(data, r, g, b); break;\n        case 'lsplatters': drawLinearSplatters(data, r, g, b); break;\n        case 'lcircles': drawLinearCircles(data, r, g, b); break;\n        case 'clock': drawClock(data, r, g, b); break;\n        case 'timeline': drawTimeLine(data, r, g, b); break;\n      }\n    }\n  };\n}\n"]],"start1":0,"start2":0,"length1":0,"length2":4027}]],"length":4027}
{"contributors":[],"silentsave":false,"ts":1351087843788,"patch":[[{"diffs":[[0,"b * 255];\n    }\n"],[-1,"    "],[0,"\n"],[1,""],[0,"    function spl"]],"start1":925,"start2":925,"length1":37,"length2":33},{"diffs":[[0,"}\n      }\n    }\n"],[-1,"    "],[0,"\n"],[1,""],[0,"    function dra"]],"start1":1574,"start2":1574,"length1":37,"length2":33},{"diffs":[[0,"    }\n    }\n"],[-1,"    "],[0,"\n"],[1,""],[0,"    function"]],"start1":1826,"start2":1826,"length1":29,"length2":25},{"diffs":[[0,"= i%30;\n"],[-1,"      "],[0,"\n"],[1,""],[0,"      if"]],"start1":1924,"start2":1924,"length1":23,"length2":17},{"diffs":[[0,"return;\n"],[-1,"      "],[0,"\n"],[1,""],[0,"      va"]],"start1":1979,"start2":1979,"length1":23,"length2":17},{"diffs":[[0,"e;\n    }"],[-1," \n    "],[1,"\n"],[0,"\n    fun"]],"start1":2183,"start2":2183,"length1":22,"length2":17},{"diffs":[[0," pixps) {\n    }\n"],[-1,"    "],[0,"\n"],[1,""],[0,"    function dra"]],"start1":2227,"start2":2227,"length1":37,"length2":33},{"diffs":[[0,", pixps,"],[-1," "],[0,"\n      ("]],"start1":2398,"start2":2398,"length1":17,"length2":16},{"diffs":[[0,"), 5)\n    }\n"],[-1,"    "],[0,"\n"],[1,""],[0,"    function"]],"start1":2454,"start2":2454,"length1":29,"length2":25},{"diffs":[[0,"r, g, b);\n    }\n"],[-1,"    "],[0,"\n"],[1,""],[0,"    function dra"]],"start1":2666,"start2":2666,"length1":37,"length2":33},{"diffs":[[0,"0) * 4))"],[1,";"],[0,"\n      p"]],"start1":2861,"start2":2861,"length1":16,"length2":17},{"diffs":[[0,"* 2);\n    }\n"],[-1,"    "],[0,"\n"],[1,""],[0,"    function"]],"start1":2944,"start2":2944,"length1":29,"length2":25},{"diffs":[[0," b) {\n    }\n"],[-1,"    "],[0,"\n"],[1,""],[0,"    function"]],"start1":2991,"start2":2991,"length1":29,"length2":25},{"diffs":[[0,"{\n    }\n"],[-1,"    "],[0,"\n"],[1,""],[0,"    ps.b"]],"start1":3045,"start2":3045,"length1":21,"length2":17},{"diffs":[[0,"d(255);\n"],[-1,"    "],[0,"\n"],[1,""],[0,"    swit"]],"start1":3070,"start2":3070,"length1":21,"length2":17},{"diffs":[[0,"      }\n"],[-1,"      "],[0,"\n    for"]],"start1":3283,"start2":3283,"length1":22,"length2":16}]],"length":3964,"saved":false}
{"ts":1351088069258,"patch":[[{"diffs":[[0,") {\n"],[1,"  ps.size(800, 400);\n"],[0,"  var "],[-1,"de"],[0,"bu"],[-1,"g = true;\n  ps.size(800, 400"],[1,"f = ps.createGraphics(ps.width*7, ps.height, ps.JAVA2D"],[0,");\n"],[1,"\n"],[0,"  ps"]],"start1":37,"start2":37,"length1":49,"length2":95}]],"length":4010,"saved":false}
{"ts":1351088378185,"patch":[[{"diffs":[[0,"s.width*"],[-1,"7"],[1,"2"],[0,", ps.hei"]],"start1":93,"start2":93,"length1":17,"length2":17},{"diffs":[[0,"unction() {\n"],[1,"\n    function expandBuffer() {\n      buf.size(buf.width*2, buf.height);\n    }\n\n"],[0,"    function"]],"start1":141,"start2":141,"length1":24,"length2":103}]],"length":4089,"saved":false}
{"ts":1351088725748,"patch":[[{"diffs":[[0,"    "],[-1,"buf.size(buf.width*2, buf.height);"],[1,"var buf2 = ps.createGraphics(buf.width*2, buf.height, ps.JAVA2D);\n      buf.loadPixels();\n      for(var i in buf.pixels) {\n\n      }\n"],[0,"\n   "]],"start1":186,"start2":186,"length1":42,"length2":140}]],"length":4187,"saved":false}
{"ts":1351088764276,"patch":[[{"diffs":[[0,"xels) {\n"],[-1,"\n      }\n"],[1,"        //TODO\n      }\n      buf2.updatePixels();\n      buf = buf2;"],[0,"\n    }\n\n"]],"start1":305,"start2":305,"length1":25,"length2":83}]],"length":4245,"saved":false}
{"contributors":[],"silentsave":false,"ts":1351105844856,"patch":[[{"diffs":[[0,"s.width*"],[-1,"2"],[1,"10"],[0,", ps.hei"]],"start1":93,"start2":93,"length1":17,"length2":18},{"diffs":[[0," {\n\n"],[-1,"    function expandBuffer() {\n      var buf2 = ps.createGraphics(buf.width*2, buf.height, ps.JAVA2D);\n      buf.loadPixels();\n      for(var i in buf.pixels) {\n        //TODO\n      }\n      buf2.updatePixels();\n      buf = buf2;\n    }\n\n"],[0,"    "]],"start1":151,"start2":151,"length1":242,"length2":8}]],"length":4012,"saved":false}
{"ts":1351105860911,"patch":[[{"diffs":[[0,") {\n"],[-1,"       circles.push({\n        x : x,\n        y : y,\n        rad : rad,\n        r : r,\n        g : g,\n        b : b,\n        a : 170,\n        l : level\n      });\n"],[0,"    "]],"start1":1037,"start2":1037,"length1":169,"length2":8}]],"length":3851,"saved":false}
{"ts":1351105874499,"patch":[[{"diffs":[[0," }\n\n"],[-1,"    function drawOldCircles() {\n      for(var i in circles) {\n        ps.fill(circles[i].r,circles[i].g,circles[i].b,circles[i].a);\n        ps.ellipse(circles[i].x,circles[i].y,\n                   2*circles[i].rad,2*circles[i].rad);\n      }\n    }\n\n"],[0,"    "]],"start1":1474,"start2":1474,"length1":256,"length2":8}]],"length":3603,"saved":false}
{"ts":1351106471821,"patch":[[{"diffs":[[0,"var "],[-1,"circles = [];"],[1,"startX = 0;\n"],[0,"\n\nfu"]],"start1":0,"start2":0,"length1":21,"length2":20}]],"length":3602,"saved":false}
{"ts":1351106717598,"patch":[[{"diffs":[[0,"tX = 0;\n"],[1,"var pixps = 10;"],[0,"\n\nfuncti"]],"start1":8,"start2":8,"length1":16,"length2":31}]],"length":3617,"saved":false}
{"ts":1351107030953,"patch":[[{"diffs":[[0,"    "],[-1,"for (var i in buffer"],[1,"while (buffer.length > 0"],[0,") {\n"]],"start1":2945,"start2":2945,"length1":28,"length2":32}]],"length":3621,"saved":false}
{"ts":1351107089105,"patch":[[{"diffs":[[0,"k;\n      }\n\n"],[1,"    var i = 0;\n"],[0,"    while (b"]],"start1":2933,"start2":2933,"length1":24,"length2":39},{"diffs":[[0,"ffer"],[-1,"[i]"],[1,".pop()"],[0,";\n  "]],"start1":3011,"start2":3011,"length1":11,"length2":14},{"diffs":[[0,"ak;\n      }\n"],[1,"      i++;\n"],[0,"    }\n  };\n}"]],"start1":3614,"start2":3614,"length1":24,"length2":35}]],"length":3650,"saved":false}
{"ts":1351107117986,"patch":[[{"diffs":[[0,"ps = 10;"],[1,"\nvar startTS = 0;"],[0,"\n\nfuncti"]],"start1":23,"start2":23,"length1":16,"length2":33}]],"length":3667,"saved":false}
{"ts":1351107169722,"patch":[[{"diffs":[[0,"tTS = 0;"],[1,"\nvar index = 0;"],[0,"\n\nfuncti"]],"start1":40,"start2":40,"length1":16,"length2":31},{"diffs":[[0," }\n\n"],[-1,"    var i = 0;\n"],[0,"    "]],"start1":2973,"start2":2973,"length1":23,"length2":8},{"diffs":[[0,"ngth > 0) {\n"],[1,""],[0,"      var da"]],"start1":2997,"start2":2997,"length1":24,"length2":24},{"diffs":[[0," g, b, i"],[1,"ndex"],[0,"); break"]],"start1":3308,"start2":3308,"length1":16,"length2":20},{"diffs":[[0,"      }\n"],[-1,""],[0,"      i"],[1,"ndex"],[0,"++;\n    "]],"start1":3639,"start2":3639,"length1":23,"length2":27}]],"length":3675,"saved":false}
{"ts":1351107298254,"patch":[[{"diffs":[[0,";\n  var "],[1,"linbuf = ps.createGraphics(ps.width*10, ps.height, ps.JAVA2D);\n  var lincbuf = ps.createGraphics(ps.width*10, ps.height, ps.JAVA2D);\n  var linsbuf = ps.createGraphics(ps.width*10, ps.height, ps.JAVA2D);\n  var lint"],[0,"buf = ps"]],"start1":106,"start2":106,"length1":16,"length2":229},{"diffs":[[0,"rgb[2];\n"],[1,"      if (index = 0) {\n        startTS = data.time;\n      }\n"],[0,"      sw"]],"start1":3450,"start2":3450,"length1":16,"length2":76}]],"length":3948,"saved":false}
{"ts":1351107312530,"patch":[[{"diffs":[[0,"artTS = "],[1,"parseInt("],[0,"data.tim"]],"start1":3491,"start2":3491,"length1":16,"length2":25},{"diffs":[[0,"ata.time"],[1,", 10)"],[0,";\n      "]],"start1":3509,"start2":3509,"length1":16,"length2":21}]],"length":3962,"saved":false}
{"ts":1351107589595,"patch":[[{"diffs":[[0,"    }\n      "],[1,"drawLinear(data, r, g, b);\n      drawLinearCircles(data, r, g, b);\n      drawLinearSplatters(data, r, g, b);\n      drawTimeLine(data, r, g, b);\n      var img\n      "],[0,"switch(type)"]],"start1":3526,"start2":3526,"length1":24,"length2":188},{"diffs":[[0,"al':"],[-1," drawSpiral(data, r, g, b, index);"],[0," bre"]],"start1":3735,"start2":3735,"length1":42,"length2":8},{"diffs":[[0,"r': "],[-1,"drawLinear(data, r, g, b"],[1,"img = linbuf.get(startX, 0, linbuf.width, linbuf.height"],[0,"); b"]],"start1":3766,"start2":3766,"length1":32,"length2":63},{"diffs":[[0,"s': "],[-1,"drawLinearSplatters(data, r, g, b"],[1,"linsbuf.get(startX, 0, linsbuf.width, linsbuf.height"],[0,"); b"]],"start1":3858,"start2":3858,"length1":41,"length2":60},{"diffs":[[0,"s': "],[-1,"drawLinearCircles(data, r, g, b"],[1,"lincbuf.get(startX, 0, lincbuf.width, lincbuf.height"],[0,"); b"]],"start1":3945,"start2":3945,"length1":39,"length2":60},{"diffs":[[0,"k': "],[-1,"drawClock(data, r, g, b);"],[0," bre"]],"start1":4029,"start2":4029,"length1":33,"length2":8},{"diffs":[[0,"e': "],[-1,"drawTimeLine(data, r, g, b"],[1,"lintbuf.get(startX, 0, lintbuf.width, lintbuf.height"],[0,"); b"]],"start1":4062,"start2":4062,"length1":34,"length2":60}]],"length":4164,"saved":false}
{"ts":1351107605890,"patch":[[{"diffs":[[0,"(index ="],[1,"="],[0," 0) {\n  "]],"start1":3467,"start2":3467,"length1":16,"length2":17}]],"length":4165,"saved":false}
{"ts":1351107619524,"patch":[[{"diffs":[[0,");\n\n"],[-1,"    switch(type) {\n        case 'spiral':\n        case 'lsplatters':\n        drawOldCircles(); break;\n        case 'clock':\n        case 'lcircles':\n        case 'linear':\n        case 'timeline': break;\n      }\n\n"],[0,"    "]],"start1":2973,"start2":2973,"length1":221,"length2":8}]],"length":3952,"saved":false}
{"ts":1351107681541,"patch":[[{"diffs":[[0,"Pos(data"],[-1,", pixps"],[0,""],[1,""],[0,") {\n    "]],"start1":2116,"start2":2116,"length1":23,"length2":16},{"diffs":[[0,", g, b) {\n      "],[-1,"ps"],[1,"linbuf.beginDraw();\n      linbuf"],[0,".noStroke();\n   "]],"start1":2166,"start2":2166,"length1":34,"length2":64},{"diffs":[[0,"seLinearPos(data"],[-1,", pixps"],[0,");\n      ps.rect"]],"start1":2267,"start2":2267,"length1":39,"length2":32},{"diffs":[[0,"0)), 5)\n"],[1,"      linbuf.endDraw();\n"],[0,"    }\n\n "]],"start1":2366,"start2":2366,"length1":16,"length2":40}]],"length":3992,"saved":false}
{"ts":1351107737096,"patch":[[{"diffs":[[0,"(255);\n\n"],[1,"    var img = undefined;\n"],[0,"    whil"]],"start1":3009,"start2":3009,"length1":16,"length2":41},{"diffs":[[0,"ngth > 0) {\n"],[-1,""],[0,"      var da"]],"start1":3062,"start2":3062,"length1":24,"length2":24},{"diffs":[[0,"b);\n"],[-1,"      var img\n"],[0,"    "]],"start1":3531,"start2":3531,"length1":22,"length2":8},{"diffs":[[0,"ak;\n      }\n"],[-1,""],[0,"      index+"]],"start1":3963,"start2":3963,"length1":24,"length2":24},{"diffs":[[0,";\n    }\n"],[1,"    if (img) {\n      image(img, 0, 0);\n    }\n"],[0,"  };\n}\n"]],"start1":3988,"start2":3988,"length1":15,"length2":60}]],"length":4048,"saved":false}
{"ts":1351107905267,"patch":[[{"diffs":[[0,", level, r, g, b"],[1,", buf"],[0,") {\n      ps.noS"]],"start1":1280,"start2":1280,"length1":32,"length2":37},{"diffs":[[0,"b, buf) {\n      "],[-1,"ps"],[1,"buf"],[0,".noStroke();\n   "]],"start1":1295,"start2":1295,"length1":34,"length2":35},{"diffs":[[0,"Stroke();\n      "],[-1,"ps"],[1,"buf"],[0,".fill(r, g, b, 1"]],"start1":1317,"start2":1317,"length1":34,"length2":35},{"diffs":[[0," b, 170);\n      "],[-1,"ps"],[1,"buf"],[0,".ellipse(x, y, r"]],"start1":1347,"start2":1347,"length1":34,"length2":35},{"diffs":[[0,"();\n"],[-1,"      var pixps = 5;\n"],[0,"    "]],"start1":2231,"start2":2231,"length1":29,"length2":8},{"diffs":[[0,";\n      "],[-1,"ps"],[1,"linbuf"],[0,".rect(xy"]],"start1":2271,"start2":2271,"length1":18,"length2":22},{"diffs":[[0,"    "],[-1,"ps.noStroke();\n      var pixps = 15"],[1,"linsbuf.beginDraw();\n      linsbuf.noStroke()"],[0,";\n  "]],"start1":2447,"start2":2447,"length1":43,"length2":53},{"diffs":[[0,"seLinearPos(data"],[-1,", pixps"],[0,");\n      splatte"]],"start1":2517,"start2":2517,"length1":39,"length2":32},{"diffs":[[0,"10), r, g, b"],[1,", linsbuf);\n      linsbuf.endDraw("],[0,");\n    }\n\n  "]],"start1":2593,"start2":2593,"length1":24,"length2":58},{"diffs":[[0,"    "],[-1,"ps.noStroke();\n      var pixps = 15"],[1,"lincbuf.beginDraw();\n      lincbuf.noStroke()"],[0,";\n  "]],"start1":2699,"start2":2699,"length1":43,"length2":53},{"diffs":[[0,"Pos(data"],[-1,", pixps"],[0,");\n     "]],"start1":2777,"start2":2777,"length1":23,"length2":16},{"diffs":[[0,"* 2, rad * 2"],[-1,""],[0,""],[1,");\n      lincbuf.endDraw("],[0,");\n    }\n\n  "]],"start1":2904,"start2":2904,"length1":24,"length2":49}]],"length":4104,"saved":false}
{"ts":1351107923081,"patch":[[{"diffs":[[0,";\n      "],[-1,"ps"],[1,"lincbuf"],[0,".fill(r,"]],"start1":2838,"start2":2838,"length1":18,"length2":23},{"diffs":[[0,";\n      "],[-1,"ps"],[1,"lincbuf"],[0,".ellipse"]],"start1":2872,"start2":2872,"length1":18,"length2":23}]],"length":4114,"saved":false}
{"ts":1351108025901,"patch":[[{"diffs":[[0,"Pos(data) {\n"],[1,"      var ts = parseInt(data.time,10);\n      return [x, ps.width/2];\n"],[0,"    }\n\n    f"]],"start1":2124,"start2":2124,"length1":24,"length2":93}]],"length":4183,"saved":false}
{"ts":1351108075594,"patch":[[{"diffs":[[0,"a.time,10);\n"],[1,"      var offset = (ts - startTS)*pixps;\n"],[0,"      return"]],"start1":2163,"start2":2163,"length1":24,"length2":65}]],"length":4224,"saved":false}
{"ts":1351108110582,"patch":[[{"diffs":[[0,"var "],[-1,"offset"],[1,"x"],[0," = ("]],"start1":2181,"start2":2181,"length1":14,"length2":9}]],"length":4219,"saved":false}
{"ts":1351108212265,"patch":[[{"diffs":[[0,"10) * 4)"],[-1,")"],[0,";\n      "]],"start1":2934,"start2":2934,"length1":17,"length2":16}]],"length":4218,"saved":false}
{"ts":1351108239360,"patch":[[{"diffs":[[0,"ex = 0;\n"],[1,"var buffer = [];"],[0,"\nfunctio"]],"start1":56,"start2":56,"length1":16,"length2":32}]],"length":4234,"saved":false}
{"ts":1351108301124,"patch":[[{"diffs":[[0,"ude,10), r, g, b"],[1,", ps"],[0,");\n      data.sp"]],"start1":2054,"start2":2054,"length1":32,"length2":36}]],"length":4238,"saved":false}
{"ts":1351108341940,"patch":[[{"diffs":[[0,", level, r, g, b"],[1,", buf"],[0,");\n        }\n   "]],"start1":1717,"start2":1717,"length1":32,"length2":37}]],"length":4243,"saved":false}
{"contributors":[],"silentsave":false,"ts":1351594948783,"patch":[[{"diffs":[[-1,"var startX = 0;\nvar pixps = 10;\nvar startTS = 0;\nvar index = 0;\nvar buffer = [];\nfunction sketch(ps) {\n  ps.size(800, 400);\n  var linbuf = ps.createGraphics(ps.width*10, ps.height, ps.JAVA2D);\n  var lincbuf = ps.createGraphics(ps.width*10, ps.height, ps.JAVA2D);\n  var linsbuf = ps.createGraphics(ps.width*10, ps.height, ps.JAVA2D);\n  var lintbuf = ps.createGraphics(ps.width*10, ps.height, ps.JAVA2D);\n\n  ps.draw = function() {\n\n    function hsl2rgb (h, s, l) {\n      /*from http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript*/\n      h = h/360;\n      s = s/100;\n      l = l/100;\n      var r, g, b;\n\n      if(s == 0){\n          r = g = b = l; // achromatic\n      }else{\n          function hue2rgb(p, q, t){\n              if(t < 0) t += 1;\n              if(t > 1) t -= 1;\n              if(t < 1/6) return p + (q - p) * 6 * t;\n              if(t < 1/2) return q;\n              if(t < 2/3) return p + (q - p) * (2/3 - t) * 6;\n              return p;\n          }\n\n          var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n          var p = 2 * l - q;\n          r = hue2rgb(p, q, h + 1/3);\n          g = hue2rgb(p, q, h);\n          b = hue2rgb(p, q, h - 1/3);\n      }\n\n      return [r * 255, g * 255, b * 255];\n    }\n\n    function splatter(x, y, rad, level, r, g, b, buf) {\n      buf.noStroke();\n      buf.fill(r, g, b, 170);\n      buf.ellipse(x, y, rad * 2, rad * 2);\n      if (level > 1 ) {\n        level --;\n        var num = Math.round(ps.random(2, 5));\n        for (var i = 0; i < num; i ++) {\n          var a = ps.random(0, ps.TWO_PI);\n          var nx = x + ps.cos(a) * 6.0 * level;\n          var ny = y + ps.sin(a) * 6.0 * level;\n          splatter(nx, ny, rad/2, level, r, g, b, buf);\n        }\n      }\n    }\n\n    function drawSpiral(data, r, g, b, i) {\n      usethissomewhere = (i/30);\n      i = i%30;\n\n      if (data.spiralprocessed !== undefined) return;\n\n      var x = (10*i*Math.cos(i) + (ps.width/2));\n      var y = (10*i*Math.sin(i) + (ps.height/2));\n      splatter(x, y, 15, parseInt(data.amplitude,10), r, g, b, ps);\n      data.spiralprocessed = true;\n    }\n\n    function chooseLinearPos(data) {\n      var ts = parseInt(data.time,10);\n      var x = (ts - startTS)*pixps;\n      return [x, ps.width/2];\n    }\n\n    function drawLinear(data, r, g, b) {\n      linbuf.beginDraw();\n      linbuf.noStroke();\n      var xy = chooseLinearPos(data);\n      linbuf.rect(xy[0], xy[1], pixps,\n      (100 + (parseInt(data.amplitude,10) * 10)), 5)\n      linbuf.endDraw();\n    }\n\n    function drawLinearSplatters(data, r, g, b){\n      linsbuf.beginDraw();\n      linsbuf.noStroke();\n      var xy = chooseLinearPos(data);\n      splatter(xy[0], xy[1], 15, parseInt(data.amplitude,10), r, g, b, linsbuf);\n      linsbuf.endDraw();\n    }\n\n    function drawLinearCircles(data, r, g, b) {\n      lincbuf.beginDraw();\n      lincbuf.noStroke();\n      var xy = chooseLinearPos(data);\n      var rad = (parseInt(data.amplitude,10) * 4);\n      lincbuf.fill(r, g, b, 170);\n      lincbuf.ellipse(xy[0], xy[0], rad * 2, rad * 2);\n      lincbuf.endDraw();\n    }\n\n    function drawClock(data, r, g, b) {\n    }\n\n    function drawTimeLine(data, r, g, b) {\n    }\n\n    ps.background(255);\n\n    var img = undefined;\n    while (buffer.length > 0) {\n      var data = buffer.pop();\n      var rgb = hsl2rgb(parseInt(data.h, 10),\n                        parseInt(data.s, 10),\n                        parseInt(data.l, 10));\n      var r = rgb[0];\n      var g = rgb[1];\n      var b = rgb[2];\n      if (index == 0) {\n        startTS = parseInt(data.time, 10);\n      }\n      drawLinear(data, r, g, b);\n      drawLinearCircles(data, r, g, b);\n      drawLinearSplatters(data, r, g, b);\n      drawTimeLine(data, r, g, b);\n      switch(type) {\n        case 'spiral': break;\n        case 'linear': img = linbuf.get(startX, 0, linbuf.width, linbuf.height); break;\n        case 'lsplatters': linsbuf.get(startX, 0, linsbuf.width, linsbuf.height); break;\n        case 'lcircles': lincbuf.get(startX, 0, lincbuf.width, lincbuf.height); break;\n        case 'clock':  break;\n        case 'timeline': lintbuf.get(startX, 0, lintbuf.width, lintbuf.height); break;\n      }\n      index++;\n    }\n    if (img) {\n      image(img, 0, 0);\n    }\n  };\n}"],[1,"\nfunction sketch(ps) {\n\n\n  ps.draw = function() {);\n}\n\nnew Processing(\"canvas1\", sketch);\n"],[0,"\n"]],"start1":0,"start2":0,"length1":4243,"length2":91}]],"length":91,"saved":false}
{"ts":1351626262208,"patch":[[{"diffs":[[0,"on()"],[-1," {)"],[1,"{}"],[0,";\n}\n"]],"start1":43,"start2":43,"length1":11,"length2":10}]],"length":90,"saved":false}

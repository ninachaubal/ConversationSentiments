{"ts":1351102509085,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"var colors = function() {\n  this.hues = [{'id': 'dummy', 'h': 360}];\n  this.assigned0 = false;\n};\n\n/*\nReturns an unused hue as distinct as possible from colors already being used\n*/\ncolors.prototype.getColor = function(id) {\n  if (!this.assigned0) {\n    this.hues.unshift({'id': id, 'h': 0});\n    this.assigned0 = true;\n    return 0;\n  } else {\n    var lowerPos = -1;\n    var upperPos = -1;\n    var longestRange = 0;\n    for (var i in this.hues) {\n      if (this.hues[i+1] !== undefined) {\n        var range = this.hues[i+1].h - this.hues[i].h;\n        if (range > longestRange) {\n          longestRange = range;\n          lowerPos = i;\n          upperPos = i + 1;\n        }\n      }\n    }\n    if (this.hues[lowerPos] !== undefined &&\n        this.hues[upperPos] !== undefined) {\n      var h = Math.round((this.hues[lowerPos].h + this.hues[upperPos].h) / 2);\n      this.hues.splice(lowerPos + 1,0,{'id': id, 'h': h});\n      return h\n    }\n    return undefined;\n  }\n};\n\n/*\nFrees up hues associated with the given user id\n*/\ncolors.prototype.remove = function(id) {\n  for (var i in this.hues) {\n    if (this.hues[i].id == id) {\n      if (this.hues[i].h === 0) {\n        this.assigned0 = false;\n      }\n      this.hues.splice(i,1);\n      break;\n    }\n  }\n};\n\n//============================================================================//\n\nvar col = colors();\nvar hueMap = {};\nvar videoCanvas;\nvar videoFeed;\n\ngapi.hangout.onApiReady.add(function(eventObj) {\n  gapi.hangout.onParticipantsAdded.add(function(e){\n    for (i in e.addedParticipants) {\n      hueMap[id] = col.getColor(e.addedParticipants[i].id);\n    }\n  });\n  gapi.hangout.onParticipantsRemoved.add(function(e){\n    //TODO\n  });\n  gapi.hangout.onTopicChanged.add(function(e){\n    //TODO\n  });\n\n  videoCanvas = gapi.hangout.layout.getVideoCanvas();\n  videoFeed = gapi.hangout.layout.getDefaultVideoFeed();\n  videoCanvas.setVideoFeed(videoFeed);\n  videoCanvas.setVisible(true);\n  videoCanvas.setWidth(400);\n  videoFeed.onDisplayedParticipantChanged.add(function(e){\n    //TODO\n  });\n});\n\n\n\n\n"]],"start1":0,"start2":0,"length1":0,"length2":2048}]],"length":2048}
{"contributors":[],"silentsave":false,"ts":1351102679453,"patch":[[{"diffs":[[0,"his.hues) {\n"],[1,"      console.log(i+1);\n"],[0,"      if (th"]],"start1":436,"start2":436,"length1":24,"length2":48},{"diffs":[[0,"i].id);\n"],[1,"      console.log('id = ' + e.addedParticipants[i].id + ' hue = ' + hueMap[id])\n"],[0,"    }\n  "]],"start1":1621,"start2":1621,"length1":16,"length2":96},{"diffs":[[0,"\n    //TODO\n"],[1,"    cconsole.log(e.)\n"],[0,"  });\n\n  vid"]],"start1":1838,"start2":1838,"length1":24,"length2":45}]],"length":2173,"saved":false}
{"ts":1351102708041,"patch":[[{"diffs":[[0,"e.log(e."],[-1,")"],[1,"topic);"],[0,"\n  });\n\n"]],"start1":1861,"start2":1861,"length1":17,"length2":23}]],"length":2179,"saved":false}
{"ts":1351102711491,"patch":[[{"diffs":[[0,"ODO\n    "],[-1,"c"],[0,"console."]],"start1":1846,"start2":1846,"length1":17,"length2":16}]],"length":2178,"saved":false}
